@using DesafioAxians.Models

<div class="tax-table-box mb-3 custom-tax-table" style="box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px; padding: 32px 32px 54px 32px; ">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <label class="form-label fw-semibold d-block mb-2" style="color: #333; font-size: 20px;">
                Taxa <span class="text-danger">*</span>
            </label>

            <div class="d-flex justify-content-between align-items-center" style="width: 100%;">
                <label class="form-label" style="font-weight: 500;">Adicionar taxa por localização</label>
                <div class="custom-switch">
                    <input type="checkbox" id="taxaSwitch" @bind="TaxaPorProduto" class="custom-switch-input" />
                    <label class="custom-switch-label" for="taxaSwitch"></label>
                </div>
            </div>

        </div>

        <button class="btn btn-outline-primary btn-sm d-flex align-items-center gap-1" @onclick="AdicionarTaxa">
            <i class="bi bi-plus-lg"></i> ADICIONAR TAXA
        </button>
    </div>

    <table class="table table-hover table-borderless align-middle">
        <thead >
            <tr>
                <th><input type="checkbox" @onchange="ToggleSelecionarTodos" checked="@TodosSelecionados" /></th>
                <th style="font-weight: 500">NUTS II</th>
                <th style="font-weight: 500">NUTS III</th>
                <th style="font-weight: 500">Concelho</th>
                <th style="font-weight: 500" class="text-end">Taxa (%)</th>
                <th style="font-weight: 500" class="text-end"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var taxa in PaginatedTaxas)
            {
                <tr class="table-light" style="border-radius: 5px;">
                    <td><input type="checkbox" checked="@taxa.Selecionada" @onchange="() => ToggleTaxa(taxa)" /></td>
                    <td>@taxa.Nuts2</td>
                    <td>@taxa.Nuts3</td>
                    <td>@taxa.Concelho</td>
                    <td class="text-end">@($"{taxa.Valor:0.##} %")</td>
                    <td class="text-end">
                        <button class="btn btn-link text-danger p-0" @onclick="() => RemoverTaxa(taxa)">
                            <img src="Icons/trash.png" width="32px" />
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    
    <div class="d-flex justify-content-between align-items-center flex-wrap">
        <div class="d-flex align-items-center gap-2 text-muted">
            <span>@($"{PaginaAtual} de {TotalPaginas} páginas ({Taxas.Count} itens)")</span>
            <select class="form-select form-select-sm border-0 shadow-none" style="width: auto;" @onchange="AlterarItensPorPagina">
                <option value="5">5</option>
                <option selected value="10">10</option>
                <option value="25">25</option>
            </select>
            <label class="mb-0">itens por página</label>
        </div>

        <!-- Direita -->
        <div class="d-flex align-items-center gap-2">
            <button class="btn btn-light p-1 rounded-circle" style="background-color: transparent;" @onclick="() => MudarPagina(1)" disabled="@(PaginaAtual == 1)">
                <img src="Icons/vector-left.png" width="13px" />
            </button>
            <button class="btn btn-light p-1 rounded-circle" style="background-color: transparent;" @onclick="() => MudarPagina(PaginaAtual - 1)" disabled="@(PaginaAtual == 1)">
                <img src="Icons/angle-left.png" width="13px" />
            </button>

            @for (int i = 1; i <= TotalPaginas; i++)
            {
                <button class="pagination-button @(i == PaginaAtual ? "active" : "")"
                        @onclick="() => MudarPagina(i)">
                    @i
                </button>
            }

            <button class="btn btn-light p-1 rounded-circle" style="background-color: transparent;" @onclick="() => MudarPagina(PaginaAtual + 1)" disabled="@(PaginaAtual == TotalPaginas)">
                <img src="Icons/angle-right.png" width="13px" />
            </button>
            <button class="btn btn-light p-1 rounded-circle" style="background-color: transparent;" @onclick="() => MudarPagina(TotalPaginas)" disabled="@(PaginaAtual == TotalPaginas)">
                <img src="Icons/vector-right.png" width="13px" />
            </button>
        </div>
    </div>

</div>



@code {
    [Parameter] public List<Taxa> Taxas { get; set; } = new();
    [Parameter] public EventCallback OnSelecionar { get; set; }

    private bool TaxaPorProduto { get; set; }
    private int PaginaAtual { get; set; } = 1;
    private int ItensPorPagina { get; set; } = 10;

    private int TotalPaginas => (int)Math.Ceiling((double)Taxas.Count / ItensPorPagina);

    private IEnumerable<Taxa> PaginatedTaxas =>
        Taxas.Skip((PaginaAtual - 1) * ItensPorPagina).Take(ItensPorPagina);

    private bool TodosSelecionados => Taxas.All(t => t.Selecionada);

    private Task ToggleTaxa(Taxa taxa)
    {
        taxa.Selecionada = !taxa.Selecionada;
        return OnSelecionar.InvokeAsync();
    }

    private Task ToggleSelecionarTodos(ChangeEventArgs e)
    {
        var selecionar = (bool)e.Value!;
        foreach (var t in Taxas)
            t.Selecionada = selecionar;
        return OnSelecionar.InvokeAsync();
    }

    private void AdicionarTaxa()
    {
        Taxas.Add(new Taxa("Norte", "Área Metropolitana", "Braga", 7.5m));
        OnSelecionar.InvokeAsync();
    }

    private void RemoverTaxa(Taxa taxa)
    {
        Taxas.Remove(taxa);
        PaginaAtual = Math.Min(PaginaAtual, TotalPaginas);
        OnSelecionar.InvokeAsync();
    }

    private void MudarPagina(int pagina)
    {
        if (pagina >= 1 && pagina <= TotalPaginas)
            PaginaAtual = pagina;
    }

    private void AlterarItensPorPagina(ChangeEventArgs e)
    {
        ItensPorPagina = int.Parse(e.Value!.ToString()!);
        PaginaAtual = 1;
    }
}

