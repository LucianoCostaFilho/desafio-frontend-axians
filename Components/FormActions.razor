<section>
    <div class="form-actions d-flex flex-wrap align-items-center border-bottom bg-white m-auto px-3 py-2" style="background-color: #F3F5F7 !important; width: 98%;">
        
        <!-- Ícone Voltar -->
        <div class="me-3 mt-2">
            <img src="Icons/arrow-left.png" width="14" />
        </div>

        <!-- Título e status -->
        <div class="flex-grow-1" style="min-width: 200px;">
            <span class="text-muted small d-block" style="font-size: 12px;">AVISOS</span>
            <div class="d-flex flex-wrap align-items-center mt-1">
                <div class="me-3">
                    <span style="font-size: 28px;">NOVO AVISO</span>
                </div>
                <div class="text-primary d-flex align-items-center mt-1" style="gap: 5px;">
                    <img src="Icons/pencil-alt.png" width="14" />
                    <span class="fw-medium text-uppercase small" style="letter-spacing: 1.7px;">EM PREENCHIMENTO</span>
                </div>
            </div>
        </div>

        <!-- Botões -->
        <div class="d-flex gap-2 mt-3 mt-lg-0 ms-lg-auto flex-wrap">
            <button class="btn btn-outline-primary d-flex align-items-center gap-2" @onclick="() => OnGuardarAlteracoes.InvokeAsync()">
                <img src="Icons/disk.png" width="14" />
                GUARDAR ALTERAÇÕES
            </button>

            <button class="btn btn-outline-primary">VALIDAR</button>

            <button class="btn btn-outline-primary" disabled="@(!PublicarHabilitado)" @onclick="OnPublicarClick">
                <i class="bi bi-check2"></i> PUBLICAR
            </button>
        </div>
    </div>
</section>

@code {
    [Parameter] public EventCallback OnGuardarAlteracoes { get; set; }
    [Parameter] public bool PublicarHabilitado { get; set; } = false;
    [Parameter] public EventCallback OnPublicar { get; set; }

    private async Task OnPublicarClick()
    {
        if (PublicarHabilitado)
        {
            await OnPublicar.InvokeAsync();
        }
    }
}