@using DesafioAxians.Models
<div class="sidebar-wrapper" style="box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px; margin-top: 11px; padding: 24px;">
    @for (int i = 0; i < OpcoesSalvas.Count; i++)
    {
        var index = i + 1;
        var isActive = CurrentStep == index;
        var isCompleted = index < CurrentStep;

        <div class="sidebar-option @(isActive ? "active" : "")" @onclick="() => OnStepChange.InvokeAsync(index)">
            <span class="option-text" style="font-size: 14px;">Opção @index</span>

            @if (isActive)
            {
                <img src="Icons/Is-Active.png" width="24" />
            }
            else if (isCompleted)
            {
                <img src="Icons/Complete.png" width="24" />
            }
            else
            {
                <img src="Icons/Tocomplete.png" width="24" />
            }
        </div>
    }
</div>

@code {
    [Parameter] public int CurrentStep { get; set; }
    [Parameter] public EventCallback<int> OnStepChange { get; set; }
    [Parameter] public List<Opcao> OpcoesSalvas { get; set; } = new();
}
